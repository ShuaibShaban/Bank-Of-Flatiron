{"ast":null,"code":"var _jsxFileName = \"/home/shuaib/Flat-Iron-Bank/flatironbank/src/components/NewTransactionform.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { validateForm } from \"./Extras\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddTransactionForm(_ref) {\n  _s();\n  let {\n    newData\n  } = _ref;\n  const [formData, setFormData] = useState({\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: \"\"\n  });\n  function handleSubmit(e) {\n    e.preventDefault();\n    //check for validity of form data\n    const formInput = validateForm(formData);\n    if (formInput.containsEmptyInput) {\n      alert(\"Please fill in all inputs\");\n    } else if (!formInput.isInvalid) {\n      // persist transaction on server after validations\n      fetch(\"http://localhost:8001/transactions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      }).then(r => r.json()).then(data => newData(data));\n      alert('Transaction Added successfully');\n    }\n    setFormData(\"\");\n  }\n  function handleChange(e) {\n    e.preventDefault();\n    const key = e.target.name;\n    const value = e.target.value;\n    setFormData({\n      ...formData,\n      [key]: value\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui segment\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"ui form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"description\",\n          placeholder: \"Description\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"category\",\n          placeholder: \"Category\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"amount\",\n          placeholder: \"Amount\",\n          step: \"0.01\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button\",\n        type: \"submit\",\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(AddTransactionForm, \"Qe9puzzgD88jmdxrDAbeDZQ7S74=\");\n_c = AddTransactionForm;\nexport default AddTransactionForm;\nvar _c;\n$RefreshReg$(_c, \"AddTransactionForm\");","map":{"version":3,"names":["React","useState","validateForm","AddTransactionForm","newData","formData","setFormData","date","description","category","amount","handleSubmit","e","preventDefault","formInput","containsEmptyInput","alert","isInvalid","fetch","method","headers","body","JSON","stringify","then","r","json","data","handleChange","key","target","name","value"],"sources":["/home/shuaib/Flat-Iron-Bank/flatironbank/src/components/NewTransactionform.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { validateForm } from \"./Extras\";\n\nfunction AddTransactionForm({newData}) {\n\n  const [formData, setFormData] = useState({\n    date:\"\",\n    description:\"\",\n    category:\"\",\n    amount:\"\"\n  })\n  function handleSubmit(e){\n    e.preventDefault();\n    //check for validity of form data\n    const formInput = validateForm(formData)\n\n    if(formInput.containsEmptyInput){\n      alert(\"Please fill in all inputs\")\n    }else if(!formInput.isInvalid){\n      // persist transaction on server after validations\n      fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n          \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n      })\n      .then(r => r.json())\n      .then(data => newData(data))\n      alert('Transaction Added successfully')\n    }\n    setFormData(\"\")\n    }\n  \n  function handleChange(e){\n    e.preventDefault();\n    const key = e.target.name\n    const value = e.target.value;\n    setFormData({...formData, [key]: value})\n  }\n  return (    \n    <div className=\"ui segment\">\n      <form onSubmit={ handleSubmit } className=\"ui form\">\n        <div className=\"inline fields\">\n          <input type=\"date\" name=\"date\" onChange={ handleChange} />\n          <input type=\"text\" name=\"description\" placeholder=\"Description\" onChange={handleChange} />\n          <input type=\"text\" name=\"category\" placeholder=\"Category\"  onChange={handleChange} />\n          <input type=\"number\" name=\"amount\" placeholder=\"Amount\" step=\"0.01\" onChange={handleChange}/>\n        </div>\n        <button className=\"ui button\" type=\"submit\">\n          Add Transaction\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTransactionForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,UAAU;AAAC;AAExC,SAASC,kBAAkB,OAAY;EAAA;EAAA,IAAX;IAACC;EAAO,CAAC;EAEnC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC;IACvCM,IAAI,EAAC,EAAE;IACPC,WAAW,EAAC,EAAE;IACdC,QAAQ,EAAC,EAAE;IACXC,MAAM,EAAC;EACT,CAAC,CAAC;EACF,SAASC,YAAY,CAACC,CAAC,EAAC;IACtBA,CAAC,CAACC,cAAc,EAAE;IAClB;IACA,MAAMC,SAAS,GAAGZ,YAAY,CAACG,QAAQ,CAAC;IAExC,IAAGS,SAAS,CAACC,kBAAkB,EAAC;MAC9BC,KAAK,CAAC,2BAA2B,CAAC;IACpC,CAAC,MAAK,IAAG,CAACF,SAAS,CAACG,SAAS,EAAC;MAC5B;MACAC,KAAK,CAAC,oCAAoC,EAAE;QAC5CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAClB,QAAQ;MAC7B,CAAC,CAAC,CACDmB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,EAAE,CAAC,CACnBF,IAAI,CAACG,IAAI,IAAIvB,OAAO,CAACuB,IAAI,CAAC,CAAC;MAC5BX,KAAK,CAAC,gCAAgC,CAAC;IACzC;IACAV,WAAW,CAAC,EAAE,CAAC;EACf;EAEF,SAASsB,YAAY,CAAChB,CAAC,EAAC;IACtBA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMgB,GAAG,GAAGjB,CAAC,CAACkB,MAAM,CAACC,IAAI;IACzB,MAAMC,KAAK,GAAGpB,CAAC,CAACkB,MAAM,CAACE,KAAK;IAC5B1B,WAAW,CAAC;MAAC,GAAGD,QAAQ;MAAE,CAACwB,GAAG,GAAGG;IAAK,CAAC,CAAC;EAC1C;EACA,oBACE;IAAK,SAAS,EAAC,YAAY;IAAA,uBACzB;MAAM,QAAQ,EAAGrB,YAAc;MAAC,SAAS,EAAC,SAAS;MAAA,wBACjD;QAAK,SAAS,EAAC,eAAe;QAAA,wBAC5B;UAAO,IAAI,EAAC,MAAM;UAAC,IAAI,EAAC,MAAM;UAAC,QAAQ,EAAGiB;QAAa;UAAA;UAAA;UAAA;QAAA,QAAG,eAC1D;UAAO,IAAI,EAAC,MAAM;UAAC,IAAI,EAAC,aAAa;UAAC,WAAW,EAAC,aAAa;UAAC,QAAQ,EAAEA;QAAa;UAAA;UAAA;UAAA;QAAA,QAAG,eAC1F;UAAO,IAAI,EAAC,MAAM;UAAC,IAAI,EAAC,UAAU;UAAC,WAAW,EAAC,UAAU;UAAE,QAAQ,EAAEA;QAAa;UAAA;UAAA;UAAA;QAAA,QAAG,eACrF;UAAO,IAAI,EAAC,QAAQ;UAAC,IAAI,EAAC,QAAQ;UAAC,WAAW,EAAC,QAAQ;UAAC,IAAI,EAAC,MAAM;UAAC,QAAQ,EAAEA;QAAa;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QACzF,eACN;QAAQ,SAAS,EAAC,WAAW;QAAC,IAAI,EAAC,QAAQ;QAAA,UAAC;MAE5C;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,GApDQzB,kBAAkB;AAAA,KAAlBA,kBAAkB;AAsD3B,eAAeA,kBAAkB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}